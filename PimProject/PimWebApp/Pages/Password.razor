@page "/password"
@using PimWebApp.Data
@using PimWebApp.Interfaz

@inject IUsuarioServices UsuarioServicio
@inject IModalService modal
@inject NavigationManager navigationManager

<Cabecera></Cabecera>



<div class="w3-row NuevoU">

    <div class="w3-col s2 iz">

        
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="personal">
            <label class="form-check-label" for="personal">Personal</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="importante">
            <label class="form-check-label" for="importante">Importante</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="trabajo">
            <label class="form-check-label" for="trabajo">Trabajo</label>
        </div>
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="juegos">
            <label class="form-check-label" for="juegos">Juegos</label>
        </div>

        <div @onclick="@(() => modal.Show<NuevoUsuario>())" class="btn crear"><img src="/imagenes/boton_crear.png" class="bta" /></div>
    </div>

    <div class="w3-col s9 der">
        <div>
            @if (usuario == null)
            {
                <p><em>Cargando...</em></p>
            }
            else
            {
        
        <div class="input-group">
            <input id="busqueda" type="text" placeholder="URL/CORREO" class="form-control">
            <span class="input-group-btn">
                <input type="submit" class="btn btn-default btn-info" value="Buscar" @onclick="(()=> Buscar())" />
            </span>
        </div>

        <div class="flex-cont">

            @foreach (Usuario u in usuario)
            {
                <Modulo Imagen="/imagenes/passwordLogo.png" usuario=@u isOpened="false"></Modulo>
            }
        </div>

            }
        </div>
    </div>
</div>

@code {

    private IEnumerable<Usuario> usuario;

    private string cadenaBusqueda { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            usuario = await UsuarioServicio.ListarTodosLosUsuarios();
        }
        catch
        {
            throw;
        }
    }

    protected async Task Buscar()
    {
        usuario = await UsuarioServicio.ListarTodosLosUsuarios(cadenaBusqueda);
    }

}


